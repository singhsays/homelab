version: "3"

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - services
    ports:
      - 80:80
      - 443:443
      - 5432:5432
    environment:
      - "DO_AUTH_TOKEN_FILE=/run/secrets/do_auth_token"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./services/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./services/traefik/config.yml:/config.yml:ro
      - cert-data-volume:/data
    secrets:
      - do_auth_token
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.home.singhsays.com`)"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-tls.entrypoints=https"
      - "traefik.http.routers.traefik-tls.rule=Host(`traefik.home.singhsays.com`)"
      - "traefik.http.routers.traefik-tls.tls=true"
      - "traefik.http.routers.traefik-tls.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-tls.tls.domains[0].main=home.singhsays.com"
      - "traefik.http.routers.traefik-tls.tls.domains[0].sans=*.home.singhsays.com"
      - "traefik.http.routers.traefik-tls.service=api@internal"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    networks:
      - services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data-volume:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=http"
      - "traefik.http.routers.portainer.rule=Host(`portainer.home.singhsays.com`)"
      - "traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.portainer.middlewares=portainer-https-redirect"
      - "traefik.http.routers.portainer-tls.entrypoints=https"
      - "traefik.http.routers.portainer-tls.rule=Host(`portainer.home.singhsays.com`)"
      - "traefik.http.routers.portainer-tls.tls=true"
      - "traefik.http.routers.portainer-tls.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portainer-tls.tls.domains[0].main=home.singhsays.com"
      - "traefik.http.routers.portainer-tls.tls.domains[0].sans=*.home.singhsays.com"
      - "traefik.http.services.portainer.loadbalancer.server.scheme=https"
      - "traefik.http.services.portainer.loadbalancer.server.port=9443"
      - "traefik.docker.network=services"

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    restart: always
    networks:
      - services
    environment:
      - PUID=1026
      - PGID=100
    volumes:
      - syncthing-config-volume:/config
      - syncthing-data-volume:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncthing.entrypoints=http"
      - "traefik.http.routers.syncthing.rule=Host(`syncthing.home.singhsays.com`)"
      - "traefik.http.middlewares.syncthing-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.syncthing.middlewares=syncthing-https-redirect"
      - "traefik.http.routers.syncthing-tls.entrypoints=https"
      - "traefik.http.routers.syncthing-tls.rule=Host(`syncthing.home.singhsays.com`)"
      - "traefik.http.routers.syncthing-tls.tls=true"
      - "traefik.http.routers.syncthing-tls.tls.certresolver=letsencrypt"
      - "traefik.http.routers.syncthing-tls.tls.domains[0].main=home.singhsays.com"
      - "traefik.http.routers.syncthing-tls.tls.domains[0].sans=*.home.singhsays.com"
      - "traefik.http.services.syncthing.loadbalancer.server.scheme=https"
      - "traefik.http.services.syncthing.loadbalancer.server.port=8384"
      - "traefik.docker.network=services"
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    networks:
      - services
    environment:
      - "POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password"
    secrets:
      - postgres_password
    volumes:
      - postgres-data-volume:/var/lib/postgresql/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.entrypoints=postgres"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.service=postgres"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
      - "traefik.docker.network=services"

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    networks:
      - services
    environment:
      - JELLYFIN_PublishedServerUrl=https://jellyfin.home.singhsays.com
    volumes:
      - jellyfin-config-volume:/config
      - jellyfin-cache-volume:/cache
      - music-data-volume:/media:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.entrypoints=http"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.home.singhsays.com`)"
      - "traefik.http.middlewares.jellyfin-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.jellyfin.middlewares=jellyfin-https-redirect"
      - "traefik.http.routers.jellyfin-tls.entrypoints=https"
      - "traefik.http.routers.jellyfin-tls.rule=Host(`jellyfin.home.singhsays.com`)"
      - "traefik.http.routers.jellyfin-tls.tls=true"
      - "traefik.http.routers.jellyfin-tls.tls.certresolver=letsencrypt"
      - "traefik.http.routers.jellyfin-tls.tls.domains[0].main=home.singhsays.com"
      - "traefik.http.routers.jellyfin-tls.tls.domains[0].sans=*.home.singhsays.com"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.docker.network=services"

networks:
  services:
    name: services
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.name: "services"

volumes:
  portainer-data-volume:
    name: portainer-data-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/docker/portainer-data-volume"
  cert-data-volume:
    name: cert-data-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/docker/cert-data-volume"
  postgres-data-volume:
    name: postgres-data-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/docker/postgres-data-volume"
  syncthing-data-volume:
    name: syncthing-data-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/docker/syncthing-data-volume/data"
  syncthing-config-volume:
    name: syncthing-config-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/docker/syncthing-data-volume/config"
  jellyfin-cache-volume:
    name: jellyfin-cache-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/docker/jellyfin-data-volume/cache"
  jellyfin-config-volume:
    name: jellyfin-config-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/docker/jellyfin-data-volume/config"
  music-data-volume:
    name: music-data-volume
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=10.0.0.10,rw"
      device: ":/volume1/music"

secrets:
  do_auth_token:
    file: "./do_auth_token.secret"
  postgres_password:
    file: "./postgres_password.secret"
